
#apiVersion: v1
#kind: Namespace
#metadata:
#  name: create-account

---

#apiVersion: v1
#kind: Namespace
#metadata:
#  name: login

---

apiVersion: v1
kind: Service
metadata:
  name: create-account-loadbalancer
  namespace: create-account
  labels:
     app: create-account-loadbalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: create-account
  type: LoadBalancer

---

apiVersion: v1
kind: Service
metadata:
  name: create-account-np
  namespace: create-account
  labels:
     app: create-account-np  
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: create-account
  type: NodePort

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: create-account
  name: create-account-ingress
  labels:
     app: create-account-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/subnets: subnet-042ebf692ba83e3d5, subnet-0d0568b4a56a33069
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: create-account-np
              servicePort: 8080

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: create-account
  name: create-account-ingress-internet
  labels:
    app: create-account-ingress-internet
  annotations:
   kubernetes.io/ingress.class: alb
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/target-type: instance
spec:
  rules:
   - http:
       paths:
         - path: /*
           backend:
             serviceName: create-account-np
             servicePort: 8080

---              

apiVersion: v1
kind: Service
metadata:
  name: login-loadbalancer
  namespace: login
  labels:
     app: login-loadbalancer
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: login
  sessionAffinity: None
  type: LoadBalancer

---

apiVersion: v1
kind: Service
metadata:
  name: login-np
  namespace: login
  labels:
     app: login-np  
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: login
  type: NodePort

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: login
  name: login-ingress
  labels:
     app: login-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: instance
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: login-np
              servicePort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: login
  name: login-deployment
  namespace: login
spec:
  replicas: 2
  selector:
    matchLabels:
      app: login
  template:
    metadata:
      labels:
        app: login
    spec:
      containers:
      - image: 813136120207.dkr.ecr.us-east-1.amazonaws.com/login
        imagePullPolicy: Always
        name: login
        ports:
        - containerPort: 8080
          protocol: TCP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: create-account
  name: create-account-deployment
  namespace: create-account
spec:
  replicas: 2
  selector:
    matchLabels:
      app: create-account
  template:
    metadata:
      labels:
        app: create-account
    spec:
      containers:
      - image: 813136120207.dkr.ecr.us-east-1.amazonaws.com/create-account
        imagePullPolicy: Always
        name: create-account
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}